AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Define resources for using container by ECS on Fargate.
  â–  create resources
  - ECS
    - IAM Role
  - ECR
  - VPC
  - Subnet
  - Security Group
  - EventBridge Rule

Parameters: 
  RepositoryName:
    Type: String
    Description: "The name of the ECR Repository"
    Default: "$REPO_NAME"

  ClusterName:
    Type: String
    Description: "The naem of the ECS Cluster"
    Default: "$CLUSTER_NAME"

  TaskDefinitionFamily:
    Type: String
    Description: "The family name of the ECS task definition"
    Default: "$TASK_DEFINITION_NAME"

  ContainerName:
    Type: String
    Description: "The name of the container in the task definition"
    Default: "$CONTAINER_NAME"
  
  ImageName:
    Type: String
    Description: "The Image Name of the container"
    Default: "$IMAGE_NAME"
  
  ContainerMemory:
    Type: Number
    Description: "The amount of memory (in MiB) to allocate to the container"
    Default: 512
  
  ContainerCpu:
    Type: Number
    Description: "The number of CPU units to allocate to the container"
    Default: 256

  SecurityGroupId:
    Type: String
    Description: "SG Id for ECS"
    Default: "$SG_ID"
  
  SubnetId:
    Type: String
    Description: "SubnetId for ECS"
    Default: "$SUBNET_ID"

  BucketName:
    Type: String
    Description: "The name of the S3 bucket"
    Default: "$S3_BUCKET"

Resources: 
  S3Bucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !Ref BucketName

  ECRRepository:
    Type: "AWS::ECR::Repository"
    Properties:
      RepositoryName: !Ref RepositoryName
  
  ECSCluster:
    Type: "AWS::ECS::Cluster"
    Properties:
      ClusterName: !Ref ClusterName
  
  ECSExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ecs-tasks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: "ecs-execution-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Ref TaskDefinitionFamily
      RequiresCompatibilities: 
        - FARGATE
      NetworkMode: awsvpc
      Cpu: !Ref ContainerCpu
      Memory: !Ref ContainerMemory
      ExecutionRoleArn: !GetAtt ECSExecutionRole.Arn
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${ImageName}:latest
          Essential: true
          PortMappings:
            - ContainerPort: 80
              HostPort: 80
  
  EventBridgeRule:
    Type: "AWS::Events::Rule"
    Properties:
      Description: "Rule to trigger ECS task every day at 9 AM"
      ScheduleExpression: "cron(0 9 * * ? *)"
      State: "ENABLED"
      Targets:
        - Id: "EcsTarget"
          Arn: !GetAtt ECSCluster.Arn
          RoleArn: !GetAtt ECSExecutionRole.Arn
          EcsParameters:
            TaskDefinitionArn: !Ref ECSTaskDefinition
            TaskCount: 1
            LaunchType: "FARGATE"
            NetworkConfiguration:
              AwsVpcConfiguration:
                AssignPublicIp: "ENABLED"
                Subnets:
                  - !Ref SubnetId
                SecurityGroups:
                  - !Ref SecurityGroupId

Outputs:
  ECRRepositoryUri:
    Description: "URI of the ECR repository"
    Value: !GetAtt ECRRepository.RepositoryUri

  ClusterName:
    Description: "Name of the ECS cluster"
    Value: !Ref ECSCluster

  TaskDefinitionArn:
    Description: "ARN of the ECS task definition"
    Value: !Ref ECSTaskDefinition